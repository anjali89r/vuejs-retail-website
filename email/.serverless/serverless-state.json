{
  "service": {
    "service": "ekatva-email",
    "serviceObject": {
      "name": "ekatva-email"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "PostprocessLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ekatva-email-dev-postprocess"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "ekatva-email",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ekatva-email-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ekatva-email-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ekatva-email",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PostprocessLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ekatva-email/dev/1564327172296-2019-07-28T15:19:32.296Z/ekatva-email.zip"
              },
              "FunctionName": "ekatva-email-dev-postprocess",
              "Handler": "handler.postprocess",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "PostprocessLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PostprocessLambdaVersionJhFuVvYHVqP3GXkS3xsIIHGDRg9d37C0A9CEeOLJ6s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostprocessLambdaFunction"
              },
              "CodeSha256": "DzXrA/OoTo7azUWLyXCnSMGEZSC1v25bTF8MSDSuxDM="
            }
          },
          "S3BucketEkatvaemail": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "ekatvaemail",
              "NotificationConfiguration": {
                "LambdaConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "PostprocessLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            },
            "DependsOn": [
              "PostprocessLambdaPermissionEkatvaemailS3"
            ]
          },
          "PostprocessLambdaPermissionEkatvaemailS3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostprocessLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::ekatvaemail"
                  ]
                ]
              }
            }
          },
          "S3EMailBucketPermissions": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ekatvaemail"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Principal": {
                      "Service": "ses.amazonaws.com"
                    },
                    "Action": [
                      "s3:PutObject"
                    ],
                    "Effect": "Allow",
                    "Sid": "AllowSESPuts",
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "ekatvaemail"
                          },
                          "/*"
                        ]
                      ]
                    },
                    "Condition": {
                      "StringEquals": {
                        "aws:Referer": {
                          "Ref": "AWS::AccountId"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "PostprocessLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostprocessLambdaVersionJhFuVvYHVqP3GXkS3xsIIHGDRg9d37C0A9CEeOLJ6s"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "bucket": "ekatvaemail",
      "bucketRef": "ekatvaemail"
    },
    "pluginsData": {},
    "functions": {
      "postprocess": {
        "handler": "handler.postprocess",
        "events": [
          {
            "s3": {
              "bucket": "ekatvaemail",
              "event": "s3:ObjectCreated:*"
            }
          }
        ],
        "name": "ekatva-email-dev-postprocess",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "S3EMailBucketPermissions": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "ekatvaemail"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Principal": {
                    "Service": "ses.amazonaws.com"
                  },
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Effect": "Allow",
                  "Sid": "AllowSESPuts",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "ekatvaemail"
                        },
                        "/*"
                      ]
                    ]
                  },
                  "Condition": {
                    "StringEquals": {
                      "aws:Referer": {
                        "Ref": "AWS::AccountId"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/Users/anjalir/Downloads/Anjali-Files/ekatva-static-site/email/.serverless/ekatva-email.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/ekatva-email/dev/1564327172296-2019-07-28T15:19:32.296Z",
    "artifact": "ekatva-email.zip"
  }
}